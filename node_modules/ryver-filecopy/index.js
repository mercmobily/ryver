
var ryver = require('ryver');
var p = require('path');
fs = require('fs.extra');

var eventEC = ryver.eventEC;

// filecopy
eventEC.onCollect( 'filter', function( cb ){

  var f = function( fileData, cb ){

    // If the file is to be hidden, goodbye
    if( fileData.info.hide ) return cb( null );

    // Make the containing directory in the destination folder
    fs.mkdirp( p.join( fileData.system.dst, fileData.system.filePath ), function( err ){
      if( err ) return cb( err );

      var s = fileData.system;
      fs.writeFile( p.join( s.dst, s.filePath, s.fileName + s.fileExt ), fileData.contents, function( err ){
        if( err ) return cb( null );
        cb( null, fileData );
      });

    });
  }

  // Return the function just defined as the filter
  cb( null, { name: 'filecopy', executor: f } );
});

// Landing
// TODO: Give option to have landing page in a "main" folder so that other filters can use it.
// TODO: Also, provide the including file's INFO to the landing file before rendering
eventEC.onCollect( 'filter', function( cb ){

  var f = function( fileData, cb ){

    if( ! fileData.info.landing ) return cb( null, fileData );

    // Load the contents of the landing file
    fs.readFile( p.join( fileData.system.filePath, fileData.info.landing ), function( err, landingContentsAsBuffer ){
      if( err ) return cb( err );

      // Make a new fileData based on:
      //  * the file's own path, name and extension
      //  * the landing file's contents
      //  * the directory's initial info
      var s = fileData.system;
      ryver.makeFileData( s.filePath, s.fileName, s.fileExt, landingContentsAsBuffer, ryver.cloneObject( fileData.initialInfo ), function( err, landingFileData ){
        if( err ) return cb( err );

        // Rename the file currently being filtered
        var postFix = ( fileData.info.landingPostfix || "_real");
        ryver.setSystemData( fileData.system, 'fileName', fileData.system.fileName + postFix );
        landingFileData.info.originalDestination = fileData.system.fileName;

        // Apply filters to the newly created landing page
        ryver.filter( landingFileData, function( err ){
          cb( null, fileData );
        })
      });
    });
  }

  // Return the function just defined as the filter
  cb( null, { name: 'landing', executor: f } );
});
